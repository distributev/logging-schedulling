{"version":3,"sources":["components/jobs/kue/controllers/view-job-details.controller.js"],"names":[],"mappings":"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","file":"components/jobs/kue/controllers/view-job-details.controller.js","sourcesContent":["(function() {\n  'use strict';\n\n  angular\n    .module('kueJobs')\n    .controller('ViewJobDetailsController', ViewJobDetailsController);\n\n  ViewJobDetailsController.$inject = ['$scope', '$interval', '$uibModal', 'JobsManager'];\n\n  function ViewJobDetailsController($scope, $interval, $uibModal, JobsManager) {\n    var scope = $scope;\n    var jobIdWatcher = null;\n    var refreshDataInterval = null;\n    var vm = this;\n    vm.message = 'Loading job...';\n    vm.deleteJob = deleteJob;\n    vm.onclose = onclose;\n    vm.requeueJob = requeueJob;\n\n    activate();\n\n    function activate() {\n      if (!scope.autoRefreshInterval) {\n        scope.autoRefreshInterval = 60000;\n      }\n\n      /**\n       * Job id watcher\n       */\n      jobIdWatcher = scope.$watch('jobId', function(newValue) {\n        if (refreshDataInterval) {\n          $interval.cancel(refreshDataInterval);\n        }\n\n        if (newValue) {\n          JobsManager.getJob(newValue).then(function(job) {\n            vm.job = job;\n          }, function(err) {\n            vm.message = err;\n          });\n\n          refreshDataInterval = $interval(function() {\n            refreshJob();\n          }, scope.autoRefreshInterval);\n\n        } else {\n          vm.message = 'Job ID is required';\n        }\n      });\n    }\n\n    /**\n     * On destroy handling\n     */\n    scope.$on('$destroy', function() {\n      if (jobIdWatcher) {\n        jobIdWatcher();\n      }\n\n      if (refreshDataInterval) {\n        $interval.cancel(refreshDataInterval);\n      }\n    });\n\n    /**\n     * Delete current job\n     */\n    function deleteJob() {\n      var dialogInstance = $uibModal.open({\n        templateUrl: 'components/confirmation-dialog/confirmation-dialog.view.html',\n        controller: 'ConfirmationDialogController',\n        controllerAs: 'confirmationDialogCtrl',\n        resolve: {\n          confirmationText: function() {\n            return 'This will permanently delete the job. Are you sure?';\n          }\n        }\n      });\n\n      dialogInstance.result.then(function(accept) {\n        if (accept) {\n          JobsManager.deleteJob(scope.jobId).then(function(message) {\n            vm.job = null;\n            vm.message = message;\n          });\n        }\n      });\n    }\n\n\t  /**\n     * On close click\n     */\n    function onclose() {\n      if (angular.isFunction(scope.onclose)) {\n        scope.onclose({\n          jobId: scope.jobId\n        });\n      }\n    }\n\n    /**\n     * Refresh current job\n     */\n    function refreshJob() {\n      JobsManager.refreshJob(scope.jobId).then(function(job) {\n        vm.job = job;\n      });\n    }\n\n\t  /**\n     * Requeue job i.e. create new job instance based on current job\n     */\n    function requeueJob() {\n      var dialogInstance = $uibModal.open({\n        templateUrl: 'components/confirmation-dialog/confirmation-dialog.view.html',\n        controller: 'ConfirmationDialogController',\n        controllerAs: 'confirmationDialogCtrl',\n        resolve: {\n          confirmationText: function() {\n            return 'This will re-submit the job for execution. Are you sure?';\n          }\n        }\n      });\n\n      dialogInstance.result.then(function(accept) {\n        if (accept) {\n          var jobData = vm.job;\n          JobsManager.createJob(jobData).then(function(job) {\n            scope.jobId = job.id;\n            vm.job = job;\n          });\n        }\n      });\n    }\n  }\n})();\n"],"sourceRoot":"/source/"}