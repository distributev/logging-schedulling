{"version":3,"sources":["components/jobs/kue/controllers/list-jobs.controller.js"],"names":[],"mappings":"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","file":"components/jobs/kue/controllers/list-jobs.controller.js","sourcesContent":["(function() {\n  'use strict';\n\n  angular\n    .module('kueJobs')\n    .controller('ListJobsController', ListJobsController);\n\n  ListJobsController.$inject = ['$scope', '$q', '$interval', '$compile', '$uibModal', 'DTOptionsBuilder', 'DTColumnBuilder', 'JobsManager', 'Job'];\n\n  function ListJobsController($scope, $q, $interval, $compile, $uibModal, DTOptionsBuilder, DTColumnBuilder, JobsManager, Job) {\n    var scope = $scope;\n    var refreshDataInterval = null;\n    var vm = this;\n    vm.dtInstance = {};\n    vm.lastRowClicked = null;\n    vm.selectedJobs = {};\n    vm.selectAll = false;\n    vm.selectedJobType = {\n      label: 'Show All'\n    };\n    vm.selectedState = {\n      label: 'Show All'\n    };\n    vm.showAllStatesCount = 0;\n    vm.deleteSelectedJobs = deleteSelectedJobs;\n    vm.refreshJobs = refreshJobs;\n    vm.toggleAll = toggleAll;\n    vm.toggleOne = toggleOne;\n    vm.toggleState = toggleState;\n    vm.toggleType = toggleType;\n\n    var perPage = scope.perPage || 10;\n    var titleHtml = '<input type=\"checkbox\" ng-model=\"listJobsCtrl.selectAll\" ng-click=\"listJobsCtrl.toggleAll()\">';\n\n    /***\n     * Sample data\n     {\n        \"id\": 1,\n        \"type\": \"email\",\n        \"data\": {\n          \"title\": \"welcome email for tj\",\n          \"to\": \"tj@learnboost.com\",\n          \"template\": \"welcome-email\"\n        },\n        \"priority\": 0,\n        \"progress\": 0,\n        \"state\": \"inactive\",\n        \"created_at\": \"1467087820563\",\n        \"promote_at\": \"1467087820563\",\n        \"updated_at\": \"1467087820792\",\n        \"attempts\": {\n          \"made\": 0,\n          \"remaining\": 1,\n          \"max\": 1\n        },\n        \"duration\": ???\n        \"state\": ???\n      },\n     */\n\n\n    activate();\n\n    function activate() {\n      if (!scope.autoRefreshInterval) {\n        scope.autoRefreshInterval = 60000;\n      }\n\n      if (scope.jobType) {\n        var jobType = scope.jobType;\n        vm.selectedJobType = {\n          label: jobType,\n          value: jobType\n        };\n      }\n      vm.dtOptions = DTOptionsBuilder.newOptions()\n        .withOption('ajax', function(data, callback) {\n          // if (data.order) {\n          //   data.order.forEach(function(order) {\n          //\n          //   });\n          // }\n\n          if (refreshDataInterval) {\n            $interval.cancel(refreshDataInterval);\n          }\n\n          vm.selectAll = false; // reset select all\n          vm.selectedJobs = {}; // reset selected items\n\n          var search = data.search ? data.search.value : null;\n\n          var promises = {};\n          if (search) {\n            promises.data = JobsManager.searchJobs(search);\n            promises.recordsTotal = JobsManager.getStats().then(function(stats) {\n              var recordsTotal = 0;\n              for (var state in stats) {\n                var count = stats[state];\n                recordsTotal += count;\n              }\n              return recordsTotal;\n            });\n\n            $q.all(promises).then(function(results) {\n              var filterJobs = results.data.slice(data.start, data.length + data.start);\n              var jobsData = {\n                recordsTotal: results.recordsTotal,\n                recordsFiltered: results.data.length,\n                data: filterJobs\n              };\n              callback(jobsData);\n            });\n\n          } else {\n            /**\n             *  columns\n             draw\n             length: 50\n             order: Array[1]\n             page: 1, 2, 3\n             search: Object\n             start: 0\n\n             0..49, 50..99\n             */\n            var from = data.start;\n            var to = (from + data.length) - 1;\n            var params = {\n              from: from,\n              to: to\n            };\n            if (vm.selectedState && vm.selectedState.value) {\n              params.state = vm.selectedState.value;\n            }\n            if (vm.selectedJobType && vm.selectedJobType.value) {\n              params.type = vm.selectedJobType.value;\n            }\n            promises.data = JobsManager.loadJobs(params);\n            promises.stats = JobsManager.getStats(params.type).then(function(stats) {\n              var recordsTotal = 0;\n              var recordsFiltered = 0;\n\n              for (var state in stats) {\n                var count = stats[state];\n                recordsTotal += count;\n\n                if (state === params.state) {\n                  recordsFiltered = count;\n                }\n              }\n\n              recordsFiltered = params.state ? recordsFiltered : recordsTotal;\n\n              return {\n                recordsTotal: recordsTotal,\n                recordsFiltered: recordsFiltered\n              };\n            });\n\n            $q.all(promises).then(function(results) {\n              var jobsData = {\n                recordsTotal: results.stats.recordsTotal,\n                recordsFiltered: results.stats.recordsFiltered,\n                data: results.data\n              };\n              callback(jobsData);\n            });\n          }\n\n          refreshDataInterval = $interval(function() {\n            vm.refreshJobs();\n          }, scope.autoRefreshInterval);\n        })\n        .withDataProp('data')\n        .withOption('language', {\n\n        })\n        .withOption('responsive', true)\n        .withOption('pageLength', perPage)\n        .withOption('processing', true)\n        .withOption('serverSide', true)\n        .withOption('createdRow', function(row) {\n          // Recompiling so we can bind Angular directive to the DT\n          $compile(angular.element(row).contents())(scope);\n        })\n        .withOption('headerCallback', function(header) {\n          if (!vm.headerCompiled) {\n            // Use this headerCompiled field to only compile header once\n            vm.headerCompiled = true;\n            $compile(angular.element(header).contents())(scope);\n          }\n        })\n        .withOption('rowCallback', rowCallback)\n        .withPaginationType('full_numbers')\n        .withDOM('lrtip'); // remove searching\n\n      vm.dtColumns = [\n        DTColumnBuilder.newColumn(null).withTitle(titleHtml).notSortable().withOption('width', '15px')\n          .renderWith(function(data, type, full) {\n            vm.selectedJobs[full.id] = false;\n            return '<input type=\"checkbox\" ng-model=\"listJobsCtrl.selectedJobs[' + data.id + ']\" ng-click=\"listJobsCtrl.toggleOne()\">';\n          }),\n        DTColumnBuilder.newColumn('customState').withTitle('State').notSortable()\n          .renderWith(function(data, type, full) {\n            /* jshint camelcase: false */\n            var stateLabelClass = full.state_label_class;\n            return '<label class=\"label ' + stateLabelClass + '\">' + data + '</label>';\n          }),\n        DTColumnBuilder.newColumn('type').withTitle('Type').notSortable(),\n        DTColumnBuilder.newColumn('started').withTitle('Started').notSortable(),\n        DTColumnBuilder.newColumn('finished').withTitle('Finished').notSortable(),\n        DTColumnBuilder.newColumn('humanizeDuration').withTitle('Duration').notSortable(),\n        DTColumnBuilder.newColumn('attempts').withTitle('Attempts').renderWith(function(data) {\n          return data.made + ' (' + data.remaining + ')';\n        }).notSortable()\n      ];\n\n      refreshJobStats(scope.jobType);\n      JobsManager.getTypes().then(function(types) {\n        var jobTypes = [];\n        types.forEach(function(type) {\n          jobTypes.push({\n            label: type,\n            value: type\n          });\n        });\n        vm.jobTypes = jobTypes;\n      });\n    }\n\n    scope.$on('$destroy', function() {\n      if (refreshDataInterval) {\n        $interval.cancel(refreshDataInterval);\n      }\n    });\n\n    function deleteSelectedJobs() {\n      var dialogInstance = $uibModal.open({\n        templateUrl: 'components/confirmation-dialog/confirmation-dialog.view.html',\n        controller: 'ConfirmationDialogController',\n        controllerAs: 'confirmationDialogCtrl',\n        resolve: {\n          confirmationText: function() {\n            return 'This will permanently delete the selected job(s). Are you sure?';\n          }\n        }\n      });\n\n      dialogInstance.result.then(function(accept) {\n        if (accept) {\n          var promises = {};\n          for (var jobId in vm.selectedJobs) {\n            if (vm.selectedJobs.hasOwnProperty(jobId) && vm.selectedJobs[jobId] === true) {\n              promises[jobId] = JobsManager.deleteJob(jobId);\n            }\n          }\n\n          $q.all(promises).then(function() {\n            vm.refreshJobs();\n          });\n        }\n      });\n    }\n\n    function refreshJobs() {\n      var resetPaging = false;\n      vm.dtInstance.reloadData(null, resetPaging);\n    }\n\n    function refreshJobStats(jobType) {\n      JobsManager.getStats(jobType).then(function(stats) {\n        var totalCount = 0;\n        var jobStatsGroups = {\n          groupOne: [],\n          groupTwo: []\n        };\n        for (var state in stats) {\n          var count = stats[state];\n          totalCount += count;\n\n          if (state === 'inactive') {\n            jobStatsGroups.groupTwo.push({\n              label: 'queued',\n              value: state,\n              count: count,\n              order: '1',\n              className: Job.stateLabelMapping[state] || 'label-default'\n            });\n          } else if (state === 'delayed') {\n            jobStatsGroups.groupTwo.push({\n              label: state,\n              value: state,\n              count: count,\n              order: '2',\n              className: Job.stateLabelMapping[state] || 'label-default'\n            });\n          } else if (state === 'active') {\n            jobStatsGroups.groupOne.push({\n              label: 'running',\n              value: state,\n              count: count,\n              order: '1',\n              className: Job.stateLabelMapping[state] || 'label-default'\n            });\n          } else {\n            jobStatsGroups.groupOne.push({\n              label: state,\n              value: state,\n              count: count,\n              order: '10',\n              className: Job.stateLabelMapping[state] || 'label-default'\n            });\n          }\n        }\n\n        vm.showAllStatesCount = totalCount;\n        vm.jobStats = jobStatsGroups;\n      });\n    }\n\n    function rowCallback(nRow, jobData) {\n      // Unbind first in order to avoid any duplicate handler (see https://github.com/l-lin/angular-datatables/issues/87)\n      $('td:gt(0)', nRow).unbind('click');\n      $('td:gt(0)', nRow).bind('click', function() {\n        scope.$apply(function() {\n          if (vm.lastRowClicked && vm.lastRowClicked !== nRow) {\n            $(vm.lastRowClicked).removeClass('info');\n          }\n          var isRowHighlighted = $(nRow).hasClass('info');\n          if (isRowHighlighted){\n            $(nRow).removeClass('info');\n          } else {\n            $(nRow).addClass('info');\n          }\n\n          vm.lastRowClicked = nRow;\n\n          if (angular.isFunction(scope.ontoggle)) {\n            var selectedJobIds = isRowHighlighted ? [] : [jobData.id];\n            scope.ontoggle({\n              selectedJobs: selectedJobIds\n            });\n          }\n        });\n      });\n\n      return nRow;\n    }\n\n    function toggleAll() {\n      for (var id in vm.selectedJobs) {\n        if (vm.selectedJobs.hasOwnProperty(id)) {\n          vm.selectedJobs[id] = vm.selectAll;\n        }\n      }\n\n      if (vm.lastRowClicked) {\n        $(vm.lastRowClicked).removeClass('info');\n      }\n\n      if (angular.isFunction(scope.ontoggle)) {\n        scope.ontoggle({\n          selectedJobs: vm.selectAll ? Object.keys(vm.selectedJobs).reverse() : [] // biggest id comes first\n        });\n      }\n    }\n\n    function toggleOne() {\n      var selectAll = true;\n      for (var id in vm.selectedJobs) {\n        if (vm.selectedJobs.hasOwnProperty(id)) {\n          if (!vm.selectedJobs[id]) {\n            selectAll = false;\n            break;\n          }\n        }\n      }\n      vm.selectAll = selectAll;\n\n      if (vm.lastRowClicked) {\n        $(vm.lastRowClicked).removeClass('info');\n      }\n\n      if (angular.isFunction(scope.ontoggle)) {\n        var selectedJobIds = [];\n        for (var jobId in vm.selectedJobs) {\n          if (vm.selectedJobs.hasOwnProperty(jobId) && vm.selectedJobs[jobId]) {\n            selectedJobIds.push(jobId);\n          }\n        }\n\n        scope.ontoggle({\n          selectedJobs: selectedJobIds.reverse() // biggest id comes first\n        });\n      }\n    }\n\n    function toggleState(state) {\n      vm.selectedState = state;\n      vm.refreshJobs();\n    }\n\n    function toggleType(jobType) {\n      vm.selectedJobType = {\n        label: jobType.label,\n        value: jobType.value\n      };\n\n      refreshJobStats(jobType.value);\n\n      vm.refreshJobs();\n    }\n  }\n})();\n"],"sourceRoot":"/source/"}