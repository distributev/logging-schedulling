{"version":3,"sources":["components/jobs/kue/services/jobs-manager.service.js"],"names":[],"mappings":"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","file":"components/jobs/kue/services/jobs-manager.service.js","sourcesContent":["(function() {\n  'use strict';\n\n  angular\n    .module('kueJobs')\n    .provider('JobsManager', JobsManager);\n\n  // JobsManager.$inject = ['$resource', '$q', 'Job'];\n\n  function JobsManager() {\n    var autoRefreshInterval = 60000;\n\n    this.setAutoRefreshInterval = function(value) {\n      autoRefreshInterval = value;\n    };\n    this.$get = function($resource, $q, $interval, Job) {\n      var resources = $resource('api/kue/job/:jobId', {\n        jobId: '@_id',\n      }, {\n        searchJobs: {\n          url: 'api/kue/job/search?q=:searchText',\n          method: 'GET',\n          isArray: true\n        },\n        getJobs: {\n          url: 'api/kue/jobs/:type/:state/:from..:to/:order?',\n          method: 'GET',\n          isArray: true,\n          params: {\n            from: 0,\n            to: 9,\n            order: 'desc'\n          }\n        },\n        getAllJobsByJobType: {\n          url: 'api/jobs/kue/:type/:from..:to',\n          method: 'GET',\n          isArray: true,\n          params: {\n            from: 0,\n            to: 9\n          }\n        },\n        getStats: {\n          url: 'api/kue/stats',\n          method: 'GET'\n        },\n        getStatsByJobType: {\n          url: 'api/jobs/kue/:type/stats',\n          method: 'GET'\n        },\n        getTypes: {\n          url: 'api/kue/job/types',\n          method: 'GET',\n          isArray: true\n        },\n        start: {\n          url: 'api/jobs/start',\n          method: 'GET'\n        },\n        shutDown: {\n          url: 'api/jobs/shutdown',\n          method: 'GET'\n        },\n        getProcessStatus: {\n          url: 'api/jobs/status',\n          method: 'GET'\n        }\n      });\n      var jobsManager = {\n        _pool: {},\n        _retrieveInstance: function(jobId, jobData) {\n          var instance = this._pool[jobId];\n\n          if (instance) {\n            instance.setData(jobData);\n          } else {\n            instance = new Job(jobData);\n            this._pool[jobId] = instance;\n          }\n\n          return instance;\n        },\n        _removeInstance: function(jobId) {\n          var instance = this._pool[jobId];\n\n          if (instance) {\n            delete this._pool[jobId];\n          }\n\n          return instance;\n        },\n        _search: function(jobId) {\n          return this._pool[jobId];\n        },\n        _load: function(jobId, deferred) {\n          var self = this;\n          resources.get({ jobId: jobId }, function(result) {\n            if (result && result.id) {\n              var job = self._retrieveInstance(jobId, result);\n              deferred.resolve(job);\n            } else {\n              var errorMessage = result.error || 'Job \"' + jobId + '\" doesn\\'t exist';\n              deferred.reject(errorMessage); // TODO: Handle error response\n            }\n          });\n        },\n        /* Public Methods */\n        /* Use this function in order to get a job instance by it's id */\n        getJob: function(jobId) {\n          var deferred = $q.defer();\n          var job = this._search(jobId);\n          if (job) {\n            deferred.resolve(job);\n          } else {\n            this._load(jobId, deferred);\n          }\n          return deferred.promise;\n        },\n        refreshJob: function(jobId) {\n          var deferred = $q.defer();\n          this._load(jobId, deferred);\n          return deferred.promise;\n        },\n        createJob: function(jobData) {\n          var deferred = $q.defer();\n          var self = this;\n          resources.save(null, jobData, function(result) {\n            if (result && result.id) {\n              var jobId = result.id;\n              self.getJob(jobId).then(function(job) {\n                deferred.resolve(job);\n              });\n            } else {\n              deferred.reject({}); // TODO: Handle error response\n            }\n          });\n          return deferred.promise;\n        },\n        deleteJob: function(jobId) {\n          var deferred = $q.defer();\n          var self = this;\n          resources.delete({ jobId: jobId }, function(result) {\n            if (result && result.message) {\n              self._removeInstance(jobId);\n              deferred.resolve(result.message);\n            } else {\n              var errorMessage = result.error || 'Failed to delete job';\n              deferred.reject(errorMessage); // TODO: Handle error response\n            }\n          });\n          return deferred.promise;\n        },\n        /* Use this function in order to get instances of all the jobs */\n        loadJobs: function(params) {\n          var deferred = $q.defer();\n          var self = this;\n          if (params.type && !params.state) {\n            resources.getAllJobsByJobType(params, function(result) {\n              if (result && !result.error) {\n                var jobs = [];\n                result.forEach(function(jobData) {\n                  var jobId = jobData.id;\n                  var job = self._retrieveInstance(jobId, jobData);\n                  jobs.push(job);\n                });\n                deferred.resolve(jobs);\n              } else {\n                var errorMessage = result.error || 'Failed to fetch jobs';\n                deferred.reject(errorMessage); // TODO: Handle error response\n              }\n            });\n          } else {\n            resources.getJobs(params, function(result) {\n              if (result && !result.error) {\n                var jobs = [];\n                result.forEach(function(jobData) {\n                  var jobId = jobData.id;\n                  var job = self._retrieveInstance(jobId, jobData);\n                  jobs.push(job);\n                });\n                deferred.resolve(jobs);\n              } else {\n                var errorMessage = result.error || 'Failed to fetch jobs';\n                deferred.reject(errorMessage); // TODO: Handle error response\n              }\n            });\n          }\n          return deferred.promise;\n        },\n        searchJobs: function(searchText) {\n          var deferred = $q.defer();\n          var self = this;\n          var params = {\n            searchText: searchText\n          };\n          resources.searchJobs(params, function(result) {\n            if (result && !result.error) {\n              var promises = [];\n              result.forEach(function(jobId) {\n                promises.push(self.getJob(jobId));\n              });\n              $q.all(promises).then(function(res) {\n                deferred.resolve(res);\n              });\n            } else {\n              var errorMessage = result.error || 'Failed to fetch jobs';\n              deferred.reject(errorMessage); // TODO: Handle error response\n            }\n          });\n          return deferred.promise;\n        },\n        getTypes: function() {\n          var deferred = $q.defer();\n          resources.getTypes({}, function(result) {\n            if (result && !result.error) {\n              deferred.resolve(result);\n            } else {\n              var errorMessage = result.error || 'Failed to delete job';\n              deferred.reject(errorMessage); // TODO: Handle error response\n            }\n          });\n          return deferred.promise;\n        },\n        getStats: function(jobType) {\n          var deferred = $q.defer();\n          if (jobType) {\n            resources.getStatsByJobType({\n              type: jobType\n            }, function(result) {\n              if (result && !result.error) {\n                var stats = {};\n                for (var stat in result) {\n                  if (Job.states.indexOf(stat) > -1) {\n                    stats[stat] = result[stat];\n                  }\n                }\n                deferred.resolve(stats);\n              } else {\n                var errorMessage = result.error || 'Failed to delete job';\n                deferred.reject(errorMessage); // TODO: Handle error response\n              }\n            });\n          } else {\n            resources.getStats({}, function(result) {\n              if (result && !result.error) {\n                var stats = {};\n                for (var key in result) {\n                  if (result.hasOwnProperty(key) && key.indexOf('Count') > -1) {\n                    var label = key.substring(0, key.indexOf('Count'));\n                    var count = result[key];\n                    stats[label] = count;\n                  }\n                }\n                deferred.resolve(stats);\n              } else {\n                var errorMessage = result.error || 'Failed to delete job';\n                deferred.reject(errorMessage); // TODO: Handle error response\n              }\n            });\n          }\n          return deferred.promise;\n        },\n        startAllJobs: function() {\n          var deferred = $q.defer();\n          resources.start({}, function(result) {\n            if (result && !result.error) {\n              deferred.resolve(result.message);\n            } else {\n              var errorMessage = result.error || 'Failed to delete job';\n              deferred.reject(errorMessage); // TODO: Handle error response\n            }\n          });\n          return deferred.promise;\n        },\n        stopAllJobs: function() {\n          var deferred = $q.defer();\n          resources.shutDown({}, function(result) {\n            if (result && !result.error) {\n              deferred.resolve(result.message);\n            } else {\n              var errorMessage = result.error || 'Failed to delete job';\n              deferred.reject(errorMessage); // TODO: Handle error response\n            }\n          });\n          return deferred.promise;\n        },\n        isJobProcessRunning: function() {\n          var deferred = $q.defer();\n          resources.getProcessStatus({}, function(result) {\n            deferred.resolve(result.status === 'running');\n          });\n          return deferred.promise;\n        }\n      };\n      return jobsManager;\n    };\n  }\n})();\n"],"sourceRoot":"/source/"}