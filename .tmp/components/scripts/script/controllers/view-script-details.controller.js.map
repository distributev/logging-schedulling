{"version":3,"sources":["components/scripts/script/controllers/view-script-details.controller.js"],"names":[],"mappings":"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","file":"components/scripts/script/controllers/view-script-details.controller.js","sourcesContent":["(function() {\n  'use strict';\n\n  angular\n    .module('flowScripts')\n    .controller('ViewScriptDetailsController', ViewScriptDetailsController);\n\n  ViewScriptDetailsController.$inject = ['$scope', '$interval', '$uibModal', 'ScriptsManager'];\n\n  function ViewscriptDetailsController($scope, $interval, $uibModal, ScriptsManager) {\n    var scope = $scope;\n    var scriptIdWatcher = null;\n    var refreshDataInterval = null;\n    var vm = this;\n    vm.message = 'Loading script...';\n    vm.deletescript = deleteScript;\n    vm.onclose = onclose;\n    vm.requeuescript = requeueScript;\n\n    activate();\n\n    function activate() {\n      if (!scope.autoRefreshInterval) {\n        scope.autoRefreshInterval = 60000;\n      }\n\n      /**\n       * script id watcher\n       */\n      scriptIdWatcher = scope.$watch('scriptId', function(newValue) {\n        if (refreshDataInterval) {\n          $interval.cancel(refreshDataInterval);\n        }\n\n        if (newValue) {\n          ScriptsManager.getScript(newValue).then(function(script) {\n            vm.script = script;\n          }, function(err) {\n            vm.message = err;\n          });\n\n          refreshDataInterval = $interval(function() {\n            refreshScript();\n          }, scope.autoRefreshInterval);\n\n        } else {\n          vm.message = 'Script ID is required';\n        }\n      });\n    }\n\n    /**\n     * On destroy handling\n     */\n    scope.$on('$destroy', function() {\n      if (scriptIdWatcher) {\n        scriptIdWatcher();\n      }\n\n      if (refreshDataInterval) {\n        $interval.cancel(refreshDataInterval);\n      }\n    });\n\n    /**\n     * Delete current script\n     */\n    function deletescript() {\n      var dialogInstance = $uibModal.open({\n        templateUrl: 'components/confirmation-dialog/confirmation-dialog.view.html',\n        controller: 'ConfirmationDialogController',\n        controllerAs: 'confirmationDialogCtrl',\n        resolve: {\n          confirmationText: function() {\n            return 'This will permanently delete the script. Are you sure?';\n          }\n        }\n      });\n\n      dialogInstance.result.then(function(accept) {\n        if (accept) {\n          ScriptsManager.deleteScript(scope.scriptId).then(function(message) {\n            vm.script = null;\n            vm.message = message;\n          });\n        }\n      });\n    }\n\n\t  /**\n     * On close click\n     */\n    function onclose() {\n      if (angular.isFunction(scope.onclose)) {\n        scope.onclose({\n          scriptId: scope.scriptId\n        });\n      }\n    }\n\n    /**\n     * Refresh current script\n     */\n    function refreshscript() {\n      ScriptsManager.refreshScript(scope.scriptId).then(function(script) {\n        vm.script = script;\n      });\n    }\n\n\t  /**\n     * Requeue script i.e. create new script instance based on current script\n     */\n    function requeuescript() {\n      var dialogInstance = $uibModal.open({\n        templateUrl: 'components/confirmation-dialog/confirmation-dialog.view.html',\n        controller: 'ConfirmationDialogController',\n        controllerAs: 'confirmationDialogCtrl',\n        resolve: {\n          confirmationText: function() {\n            return 'This will re-submit the script for execution. Are you sure?';\n          }\n        }\n      });\n\n      dialogInstance.result.then(function(accept) {\n        if (accept) {\n          var scriptData = vm.script;\n          ScriptsManager.createScript(scriptData).then(function(script) {\n            scope.scriptId = script.id;\n            vm.script = script;\n          });\n        }\n      });\n    }\n  }\n})();\n"],"sourceRoot":"/source/"}