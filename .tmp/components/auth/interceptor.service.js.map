{"version":3,"sources":["components/auth/interceptor.service.js"],"names":[],"mappings":"AAAA;;AAEA,CAAC,YAAW;;AAEV,WAAS,eAAT,CAAyB,UAAzB,EAAqC,EAArC,EAAyC,QAAzC,EAAmD,SAAnD,EAA8D,IAA9D,EAAoE;AAClE,QAAI,KAAJ;AACA,WAAO;AACL;AACA,aAFK,mBAEG,MAFH,EAEW;AACd,eAAO,OAAP,GAAiB,OAAO,OAAP,IAAkB,EAAnC;AACA,YAAI,SAAS,GAAT,CAAa,OAAb,KAAyB,KAAK,YAAL,CAAkB,OAAO,GAAzB,CAA7B,EAA4D;AAC1D,iBAAO,OAAP,CAAe,aAAf,GAA+B,YAAY,SAAS,GAAT,CAAa,OAAb,CAA3C;AACD;AACD,eAAO,MAAP;AACD,OARI;;;AAUL;AACA,mBAXK,yBAWS,QAXT,EAWmB;AACtB,YAAI,SAAS,MAAT,KAAoB,GAAxB,EAA6B;AAC3B,WAAC,UAAU,QAAQ,UAAU,GAAV,CAAc,QAAd,CAAlB,CAAD,EACC,EADD,CACI,OADJ;AAEA;AACA,mBAAS,MAAT,CAAgB,OAAhB;AACD;AACD,eAAO,GAAG,MAAH,CAAU,QAAV,CAAP;AACD;AAnBI,KAAP;AAqBD;;AAED,UAAQ,MAAR,CAAe,0BAAf,EACG,OADH,CACW,iBADX,EAC8B,eAD9B;AAED,CA7BD","file":"components/auth/interceptor.service.js","sourcesContent":["'use strict';\n\n(function() {\n\n  function authInterceptor($rootScope, $q, $cookies, $injector, Util) {\n    var state;\n    return {\n      // Add authorization token to headers\n      request(config) {\n        config.headers = config.headers || {};\n        if ($cookies.get('token') && Util.isSameOrigin(config.url)) {\n          config.headers.Authorization = 'Bearer ' + $cookies.get('token');\n        }\n        return config;\n      },\n\n      // Intercept 401s and redirect you to login\n      responseError(response) {\n        if (response.status === 401) {\n          (state || (state = $injector.get('$state')))\n          .go('login');\n          // remove any stale tokens\n          $cookies.remove('token');\n        }\n        return $q.reject(response);\n      }\n    };\n  }\n\n  angular.module('angularFullstackApp.auth')\n    .factory('authInterceptor', authInterceptor);\n})();\n"],"sourceRoot":"/source/"}